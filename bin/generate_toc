#!/usr/bin/env python3

import os
import re

summary_str = r"""# Table of Contents 
- [Table of Contents](./SUMMARY.md)
"""

# Handles SUMMARY.md generation
for root, dirs, files in sorted(os.walk("src")):
    for name in sorted(files, key=lambda d: d.replace("_", "`")):
        rel_dir = os.path.relpath(root, ".")
        file_name = os.path.join(rel_dir, name)
        if file_name.lower().endswith(('readme.md', 'summary.md')):
            pass
        elif file_name.lower().endswith(('.md')):
            depth = file_name.count('/') - 2
            if file_name.endswith('_index.md'):
                split_file_name = file_name.split('/')
                new_split_file_name = []
                for word in split_file_name:
                    if word in replacements:
                        new_split_file_name.append(replacements[word])
                    else:
                        new_split_file_name.append(word)
                dir_name = new_split_file_name[-2].title().replace('-',
                                                                   ' ').replace('_', ' ')
                summary_str += f"{' ' * depth * 2}- [{dir_name}](./{file_name[4:]})\n"
            else:
                depth += 1
                link_title = file_name[:-
                                       3].split('/')[-1].replace('-', ' ').replace('_', ' ')
                summary_str += f"{' ' * depth * 2}- [{link_title.title()}](./{file_name[4:]})\n"

with open('src/SUMMARY.md', 'w+') as f:
    f.write(summary_str)
